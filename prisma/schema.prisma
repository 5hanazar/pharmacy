// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Member {
    id          Int     @id @default(autoincrement())
    active      Boolean
    username    String  @unique @db.VarChar(32)
    password    String  @db.VarChar(32)
    name        String  @db.VarChar(64)
    description String  @db.VarChar(128)
    createdGmt  Int
    onlineGmt   Int

    @@map("members")
}

model Client {
    id          Int      @id @default(autoincrement())
    active      Boolean
    username    String   @unique @db.VarChar(32)
    phone       String   @unique @db.VarChar(32)
    name        String   @db.VarChar(64)
    description String   @db.VarChar(128)
    address     String   @db.VarChar(128)
    devicesJ    String   @db.VarChar(128)
    hashJwt     String   @db.VarChar(8)
    createdGmt  Int
    modifiedGmt Int
    imageGmt    Int
    onlineGmt   Int
    basket      Basket[]
    orderRequests      OrderRequest[]

    @@map("clients")
}

model TempCode {
    phone      String @db.VarChar(32)
    code       String @db.VarChar(8)
    createdGmt Int

    @@id([phone, createdGmt])
    @@map("tempcodes")
}

model Product {
    id            Int      @id @default(autoincrement())
    active        Boolean
    barcode       String   @unique @db.VarChar(32)
    namesJ        String   @db.VarChar(400)
    descriptionsJ String   @db.VarChar(1200)
    keywords      String   @db.VarChar(128)
    price         Float
    sortIndex     Int
    imagesJ       String   @db.VarChar(128)
    createdGmt    Int
    modifiedGmt   Int
    basket        Basket[]
    orderRequestLines    OrderRequestLine[]

    @@map("products")
}

model Category {
    id            Int     @id @default(autoincrement())
    active        Boolean
    code          String  @unique @db.VarChar(128)
    parentCode    String  @db.VarChar(128)
    namesJ        String  @db.VarChar(400)
    descriptionsJ String  @db.VarChar(1200)
    createdGmt    Int
    modifiedGmt   Int

    @@map("categories")
}

model Basket {
    warehouse  Int
    productId  Int
    product    Product @relation(fields: [productId], references: [id])
    clientId   Int
    client     Client  @relation(fields: [clientId], references: [id])
    quantity   Float
    createdGmt Int

    @@id([warehouse, productId, clientId])
    @@map("basket")
}

model OrderRequest {
    id               Int         @id @default(autoincrement())
    active           Boolean
    clientId         Int
    client           Client      @relation(fields: [clientId], references: [id])
    phoneToContact   String
    address          String
    description      String
    orderRequestLines       OrderRequestLine[]
    createdGmt       Int
    modifiedGmt      Int

    @@map("order_requests")
}

model OrderRequestLine {
    line       Int
    orderRequestId    Int
    orderRequest      OrderRequest   @relation(fields: [orderRequestId], references: [id])
    productId  Int
    product    Product @relation(fields: [productId], references: [id])
    quantity   Float

    @@id([orderRequestId, productId])
    @@map("order_request_lines")
}
